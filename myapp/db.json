const fs = require('fs');
const express = require('express');
const app = express();
const PORT = process.env.PORT || 3000;

// Middleware to parse JSON requests
app.use(express.json());

// Serve static files from the 'public' folder
app.use(express.static('public'));

// API endpoint to get notes
app.get('/api/notes', (req, res) => {
  const notes = getNotes();
  res.json(notes);
});

// API endpoint to save a new note
app.post('/api/notes', (req, res) => {
  const newNote = req.body;
  const notes = getNotes();
  newNote.id = generateUniqueId(); // You need to implement this function to generate unique IDs
  notes.push(newNote);
  writeNotes(notes);
  res.json(newNote);
});

// Function to read notes from the db.json file
function getNotes() {
  const data = fs.readFileSync('db.json', 'utf8');
  return JSON.parse(data) || [];
}

// Function to write notes to the db.json file
function writeNotes(notes) {
  fs.writeFileSync('db.json', JSON.stringify(notes, null, 2), 'utf8');
}

// Function to generate a unique ID (You can use a library like uuid)
function generateUniqueId() {
  // Implement your logic here
}

// Start the server
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
